---
AWSTemplateFormatVersion: "2010-09-09"

Description: VPC (Dynamically create resources across AZs) - Version 1.0.0

Parameters:

  NumberOfAZs:
    Description: 'Number of Availability Zones for the VPC to span'
    Type: Number
    Default: 2
    AllowedValues: [2, 3, 4, 5, 6]

  CIDRRangePrefix:
    Description: 'Class B of VPC (10.XXX.0.0/16)'
    Type: Number
    ConstraintDescription: 'Must be in the range [0-255]'
    MinValue: 0
    MaxValue: 255

  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events.'
    Type: Number
    Default: 30
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

  TrafficLogType:
    Description: 'The type of traffic to log.'
    Type: String
    Default: ALL
    AllowedValues:
    - ACCEPT
    - REJECT
    - ALL

Conditions:
  2AZRequired: !Or [!Equals [ !Ref NumberOfAZs, 2 ], !Equals [ !Ref NumberOfAZs, 3 ], !Equals [ !Ref NumberOfAZs, 4 ], !Equals [ !Ref NumberOfAZs, 5 ], !Equals [ !Ref NumberOfAZs, 6 ]]
  3AZRequired: !Or [!Equals [ !Ref NumberOfAZs, 3 ], !Equals [ !Ref NumberOfAZs, 4 ], !Equals [ !Ref NumberOfAZs, 5 ], !Equals [ !Ref NumberOfAZs, 6 ]]
  4AZRequired: !Or [!Equals [ !Ref NumberOfAZs, 4 ], !Equals [ !Ref NumberOfAZs, 5 ], !Equals [ !Ref NumberOfAZs, 6 ]]
  5AZRequired: !Or [!Equals [ !Ref NumberOfAZs, 5 ], !Equals [ !Ref NumberOfAZs, 6 ]]
  6AZRequired: !Equals [ !Ref NumberOfAZs, 6 ]

Resources:

  #VPC Log Group
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref LogsRetentionInDays

  #VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub '10.${CIDRRangePrefix}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-VPC']]

  #DHCP Options Set
  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: !Join ['', [!Ref 'AWS::Region', '.compute.internal']]
      DomainNameServers:
        - AmazonProvidedDNS
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DHCPOptions']]

  VPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId:
         Ref: VPC
      DhcpOptionsId:
         Ref: DHCPOptions

  #Public Subnets
  PublicNetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.0.0/22'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PublicAZ1']]
      VpcId: !Ref 'VPC'

  PublicNetAZ2:
    Type: AWS::EC2::Subnet
    Condition: 2AZRequired
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.4.0/22'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PublicAZ2']]
      VpcId: !Ref 'VPC'

  PublicNetAZ3:
    Type: AWS::EC2::Subnet
    Condition: 3AZRequired
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.8.0/22'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PublicAZ3']]
      VpcId: !Ref 'VPC'

  PublicNetAZ4:
    Type: AWS::EC2::Subnet
    Condition: 4AZRequired
    Properties:
      AvailabilityZone: !Select [3, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.12.0/22'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PublicAZ4']]
      VpcId: !Ref 'VPC'

  PublicNetAZ5:
    Type: AWS::EC2::Subnet
    Condition: 5AZRequired
    Properties:
      AvailabilityZone: !Select [4, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.16.0/22'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PublicAZ5']]
      VpcId: !Ref 'VPC'

  PublicNetAZ6:
    Type: AWS::EC2::Subnet
    Condition: 6AZRequired
    Properties:
      AvailabilityZone: !Select [5, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.20.0/22'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PublicAZ6']]
      VpcId: !Ref 'VPC'

  #Private Subnets
  PrivateNetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.120.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ1']]
        - Key: Network
          Value: private
      VpcId: !Ref 'VPC'

  PrivateNetAZ2:
    Type: AWS::EC2::Subnet
    Condition: 2AZRequired
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.128.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ2']]
        - Key: Network
          Value: private
      VpcId: !Ref 'VPC'

  PrivateNetAZ3:
    Type: AWS::EC2::Subnet
    Condition: 3AZRequired
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.136.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ3']]
        - Key: Network
          Value: private
      VpcId: !Ref 'VPC'

  PrivateNetAZ4:
    Type: AWS::EC2::Subnet
    Condition: 4AZRequired
    Properties:
      AvailabilityZone: !Select [3, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.144.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ4']]
        - Key: Network
          Value: private
      VpcId: !Ref 'VPC'

  PrivateNetAZ5:
    Type: AWS::EC2::Subnet
    Condition: 5AZRequired
    Properties:
      AvailabilityZone: !Select [4, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.152.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ5']]
        - Key: Network
          Value: private
      VpcId: !Ref 'VPC'

  PrivateNetAZ6:
    Type: AWS::EC2::Subnet
    Condition: 6AZRequired
    Properties:
      AvailabilityZone: !Select [5, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.160.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ6']]
        - Key: Network
          Value: private
      VpcId: !Ref 'VPC'

  #Data Subnets
  DataNetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.200.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ1']]
        - Key: Network
          Value: Data
      VpcId: !Ref 'VPC'

  DataNetAZ2:
    Type: AWS::EC2::Subnet
    Condition: 2AZRequired
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.208.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ2']]
        - Key: Network
          Value: Data
      VpcId: !Ref 'VPC'

  DataNetAZ3:
    Type: AWS::EC2::Subnet
    Condition: 3AZRequired
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.216.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ3']]
        - Key: Network
          Value: Data
      VpcId: !Ref 'VPC'

  DataNetAZ4:
    Type: AWS::EC2::Subnet
    Condition: 4AZRequired
    Properties:
      AvailabilityZone: !Select [3, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.224.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ4']]
        - Key: Network
          Value: Data
      VpcId: !Ref 'VPC'

  DataNetAZ5:
    Type: AWS::EC2::Subnet
    Condition: 5AZRequired
    Properties:
      AvailabilityZone: !Select [4, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.232.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ5']]
        - Key: Network
          Value: Data
      VpcId: !Ref 'VPC'

  DataNetAZ6:
    Type: AWS::EC2::Subnet
    Condition: 6AZRequired
    Properties:
      AvailabilityZone: !Select [5, !GetAZs '']
      CidrBlock: !Sub '10.${CIDRRangePrefix}.240.0/21'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ6']]
        - Key: Network
          Value: Data
      VpcId: !Ref 'VPC'

  #Internet Gateway for VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-IGW']]

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref 'InternetGateway'
      VpcId: !Ref 'VPC'

  #Public Route Table
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PublicRT']]

  #Private Route Table
  RouteTablePrivateAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ1RT']]

  RouteTablePrivateAZ2:
    Type: AWS::EC2::RouteTable
    Condition: 2AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ2RT']]

  RouteTablePrivateAZ3:
    Type: AWS::EC2::RouteTable
    Condition: 3AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ3RT']]

  RouteTablePrivateAZ4:
    Type: AWS::EC2::RouteTable
    Condition: 4AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ4RT']]

  RouteTablePrivateAZ5:
    Type: AWS::EC2::RouteTable
    Condition: 5AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ5RT']]

  RouteTablePrivateAZ6:
    Type: AWS::EC2::RouteTable
    Condition: 6AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-PrivateAZ6RT']]

  #Data Route Table
  RouteTableDataAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ1RT']]

  RouteTableDataAZ2:
    Type: AWS::EC2::RouteTable
    Condition: 2AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ2RT']]

  RouteTableDataAZ3:
    Type: AWS::EC2::RouteTable
    Condition: 3AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ3RT']]

  RouteTableDataAZ4:
    Type: AWS::EC2::RouteTable
    Condition: 4AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ4RT']]

  RouteTableDataAZ5:
    Type: AWS::EC2::RouteTable
    Condition: 5AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ5RT']]

  RouteTableDataAZ6:
    Type: AWS::EC2::RouteTable
    Condition: 6AZRequired
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-DataAZ6RT']]

  #Public Routes
  RoutePublicDefault:
    DependsOn:
      - VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'RouteTablePublic'
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'InternetGateway'

  RouteAssociationPublicAZ1Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicNetAZ1'
      RouteTableId: !Ref 'RouteTablePublic'

  RouteAssociationPublicAZ2Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 2AZRequired
    Properties:
      SubnetId: !Ref 'PublicNetAZ2'
      RouteTableId: !Ref 'RouteTablePublic'

  RouteAssociationPublicAZ3Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 3AZRequired
    Properties:
      SubnetId: !Ref 'PublicNetAZ3'
      RouteTableId: !Ref 'RouteTablePublic'

  RouteAssociationPublicAZ4Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 4AZRequired
    Properties:
      SubnetId: !Ref 'PublicNetAZ4'
      RouteTableId: !Ref 'RouteTablePublic'

  RouteAssociationPublicAZ5Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 5AZRequired
    Properties:
      SubnetId: !Ref 'PublicNetAZ5'
      RouteTableId: !Ref 'RouteTablePublic'

  RouteAssociationPublicAZ6Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 6AZRequired
    Properties:
      SubnetId: !Ref 'PublicNetAZ6'
      RouteTableId: !Ref 'RouteTablePublic'

  #Private Routes
  RouteAssociationPrivateAZ1Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateNetAZ1'
      RouteTableId: !Ref 'RouteTablePrivateAZ1'

  RouteAssociationPrivateAZ2Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 2AZRequired
    Properties:
      SubnetId: !Ref 'PrivateNetAZ2'
      RouteTableId: !Ref 'RouteTablePrivateAZ2'

  RouteAssociationPrivateAZ3Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 3AZRequired
    Properties:
      SubnetId: !Ref 'PrivateNetAZ3'
      RouteTableId: !Ref 'RouteTablePrivateAZ3'

  RouteAssociationPrivateAZ4Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 4AZRequired
    Properties:
      SubnetId: !Ref 'PrivateNetAZ4'
      RouteTableId: !Ref 'RouteTablePrivateAZ4'

  RouteAssociationPrivateAZ5Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 5AZRequired
    Properties:
      SubnetId: !Ref 'PrivateNetAZ5'
      RouteTableId: !Ref 'RouteTablePrivateAZ5'

  RouteAssociationPrivateAZ6Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 6AZRequired
    Properties:
      SubnetId: !Ref 'PrivateNetAZ6'
      RouteTableId: !Ref 'RouteTablePrivateAZ6'

  #Data Routes
  RouteAssociationDataAZ1Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'DataNetAZ1'
      RouteTableId: !Ref 'RouteTableDataAZ1'

  RouteAssociationDataAZ2Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 2AZRequired
    Properties:
      SubnetId: !Ref 'DataNetAZ2'
      RouteTableId: !Ref 'RouteTableDataAZ2'

  RouteAssociationDataAZ3Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 3AZRequired
    Properties:
      SubnetId: !Ref 'DataNetAZ3'
      RouteTableId: !Ref 'RouteTableDataAZ3'

  RouteAssociationDataAZ4Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 4AZRequired
    Properties:
      SubnetId: !Ref 'DataNetAZ4'
      RouteTableId: !Ref 'RouteTableDataAZ4'

  RouteAssociationDataAZ5Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 5AZRequired
    Properties:
      SubnetId: !Ref 'DataNetAZ5'
      RouteTableId: !Ref 'RouteTableDataAZ5'

  RouteAssociationDataAZ6Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 6AZRequired
    Properties:
      SubnetId: !Ref 'DataNetAZ6'
      RouteTableId: !Ref 'RouteTableDataAZ6'

  #NAT Gateways
  NATAZ1:
    Type: AWS::EC2::NatGateway
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt 'EIPNATAZ1.AllocationId'
      SubnetId: !Ref 'PublicNetAZ1'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-NATGW-AZ1']]

  EIPNATAZ1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-EIP-AZ1']]

  NATAZ1Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'RouteTablePrivateAZ1'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATAZ1'

  NATAZ2:
    Type: AWS::EC2::NatGateway
    Condition: 2AZRequired
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt 'EIPNATAZ2.AllocationId'
      SubnetId: !Ref 'PublicNetAZ2'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-NATGW-AZ2']]

  EIPNATAZ2:
    Type: AWS::EC2::EIP
    Condition: 2AZRequired
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-EIP-AZ2']]

  NATAZ2Route:
    Type: AWS::EC2::Route
    Condition: 2AZRequired
    Properties:
      RouteTableId: !Ref 'RouteTablePrivateAZ2'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATAZ2'

  NATAZ3:
    Type: AWS::EC2::NatGateway
    Condition: 3AZRequired
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt 'EIPNATAZ3.AllocationId'
      SubnetId: !Ref 'PublicNetAZ3'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-NATGW-AZ3']]

  EIPNATAZ3:
    Type: AWS::EC2::EIP
    Condition: 3AZRequired
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-EIP-AZ3']]

  NATAZ3Route:
    Type: AWS::EC2::Route
    Condition: 3AZRequired
    Properties:
      RouteTableId: !Ref 'RouteTablePrivateAZ3'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATAZ3'

  NATAZ4:
    Type: AWS::EC2::NatGateway
    Condition: 4AZRequired
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt 'EIPNATAZ4.AllocationId'
      SubnetId: !Ref 'PublicNetAZ4'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-NATGW-AZ4']]

  EIPNATAZ4:
    Type: AWS::EC2::EIP
    Condition: 4AZRequired
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-EIP-AZ4']]

  NATAZ4Route:
    Type: AWS::EC2::Route
    Condition: 4AZRequired
    Properties:
      RouteTableId: !Ref 'RouteTablePrivateAZ4'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATAZ4'

  NATAZ5:
    Type: AWS::EC2::NatGateway
    Condition: 5AZRequired
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt 'EIPNATAZ5.AllocationId'
      SubnetId: !Ref 'PublicNetAZ5'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-NATGW-AZ5']]

  EIPNATAZ5:
    Type: AWS::EC2::EIP
    Condition: 5AZRequired
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-EIP-AZ5']]

  NATAZ5Route:
    Type: AWS::EC2::Route
    Condition: 5AZRequired
    Properties:
      RouteTableId: !Ref 'RouteTablePrivateAZ5'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATAZ5'

  NATAZ6:
    Type: AWS::EC2::NatGateway
    Condition: 6AZRequired
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt 'EIPNATAZ6.AllocationId'
      SubnetId: !Ref 'PublicNetAZ6'
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-NATGW-AZ6']]

  EIPNATAZ6:
    Type: AWS::EC2::EIP
    Condition: 6AZRequired
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', '-EIP-AZ6']]

  NATAZ6Route:
    Type: AWS::EC2::Route
    Condition: 6AZRequired
    Properties:
      RouteTableId: !Ref 'RouteTablePrivateAZ6'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATAZ6'

  #IAM Role
  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'vpc-flow-logs.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: 'flowlogs-policy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            - 'logs:DescribeLogGroups'
            - 'logs:DescribeLogStreams'
            Resource: '*'

  #Flow Logs
  FlowLog:
    Type: 'AWS::EC2::FlowLog'
    Properties:
      DeliverLogsPermissionArn: !GetAtt 'Role.Arn'
      LogGroupName: !Ref LogGroup
      ResourceId: !Ref VPC
      ResourceType: 'VPC'
      TrafficType: !Ref TrafficLogType

Outputs:
  #VPC ID
  VPCID:
    Value: !Ref 'VPC'

  #NAT Gateway IPs
  ElasticIP1:
    Value: !Ref 'EIPNATAZ1'

  ElasticIP2:
    Value: !Ref 'EIPNATAZ2'
    Condition: 2AZRequired

  ElasticIP3:
    Value: !Ref 'EIPNATAZ3'
    Condition: 3AZRequired

  ElasticIP4:
    Value: !Ref 'EIPNATAZ4'
    Condition: 4AZRequired

  ElasticIP5:
    Value: !Ref 'EIPNATAZ5'
    Condition: 5AZRequired

  ElasticIP6:
    Value: !Ref 'EIPNATAZ6'
    Condition: 6AZRequired

  #Public Subnets
  SubnetPublicAZ1:
    Value: !Ref 'PublicNetAZ1'

  SubnetPublicAZ2:
    Value: !Ref 'PublicNetAZ2'
    Condition: 2AZRequired

  SubnetPublicAZ3:
    Value: !Ref 'PublicNetAZ3'
    Condition: 3AZRequired

  SubnetPublicAZ4:
    Value: !Ref 'PublicNetAZ4'
    Condition: 4AZRequired

  SubnetPublicAZ5:
    Value: !Ref 'PublicNetAZ5'
    Condition: 5AZRequired

  SubnetPublicAZ6:
    Value: !Ref 'PublicNetAZ6'
    Condition: 6AZRequired

  RouteTablePublic:
    Value: !Ref 'RouteTablePublic'

  #Private Subnets
  SubnetPrivateAZ1:
    Value: !Ref 'PrivateNetAZ1'

  SubnetPrivateAZ2:
    Value: !Ref 'PrivateNetAZ2'
    Condition: 2AZRequired

  SubnetPrivateAZ3:
    Value: !Ref 'PrivateNetAZ3'
    Condition: 3AZRequired

  SubnetPrivateAZ4:
    Value: !Ref 'PrivateNetAZ4'
    Condition: 4AZRequired

  SubnetPrivateAZ5:
    Value: !Ref 'PrivateNetAZ5'
    Condition: 5AZRequired

  SubnetPrivateAZ6:
    Value: !Ref 'PrivateNetAZ6'
    Condition: 6AZRequired

  RouteTablePrivateAZ1:
    Value: !Ref 'RouteTablePrivateAZ1'

  RouteTablePrivateAZ2:
    Value: !Ref 'RouteTablePrivateAZ2'
    Condition: 2AZRequired

  RouteTablePrivateAZ3:
    Value: !Ref 'RouteTablePrivateAZ3'
    Condition: 3AZRequired

  RouteTablePrivateAZ4:
    Value: !Ref 'RouteTablePrivateAZ4'
    Condition: 4AZRequired

  RouteTablePrivateAZ5:
    Value: !Ref 'RouteTablePrivateAZ5'
    Condition: 5AZRequired

  RouteTablePrivateAZ6:
    Value: !Ref 'RouteTablePrivateAZ6'
    Condition: 6AZRequired

  # Data Subnets
  SubnetDataAZ1:
    Value: !Ref 'DataNetAZ1'

  SubnetDataAZ2:
    Value: !Ref 'DataNetAZ2'
    Condition: 2AZRequired

  SubnetDataAZ3:
    Value: !Ref 'DataNetAZ3'
    Condition: 3AZRequired

  SubnetDataAZ4:
    Value: !Ref 'DataNetAZ4'
    Condition: 4AZRequired

  SubnetDataAZ5:
    Value: !Ref 'DataNetAZ5'
    Condition: 5AZRequired

  SubnetDataAZ6:
    Value: !Ref 'DataNetAZ6'
    Condition: 6AZRequired

  RouteTableDataAZ1:
    Value: !Ref 'RouteTableDataAZ1'

  RouteTableDataAZ2:
    Value: !Ref 'RouteTableDataAZ2'
    Condition: 2AZRequired

  RouteTableDataAZ3:
    Value: !Ref 'RouteTableDataAZ3'
    Condition: 3AZRequired

  RouteTableDataAZ4:
    Value: !Ref 'RouteTableDataAZ4'
    Condition: 4AZRequired

  RouteTableDataAZ5:
    Value: !Ref 'RouteTableDataAZ5'
    Condition: 5AZRequired

  RouteTableDataAZ6:
    Value: !Ref 'RouteTableDataAZ6'
    Condition: 6AZRequired



  #Subnet Arrays
  PublicSubnets:
    Value: !If
      - 6AZRequired
      - !Join
        - ','
        - - !Ref 'PublicNetAZ1'
          - !Ref 'PublicNetAZ2'
          - !Ref 'PublicNetAZ3'
          - !Ref 'PublicNetAZ4'
          - !Ref 'PublicNetAZ5'
          - !Ref 'PublicNetAZ6'
      - !If
        - 5AZRequired
        - !Join
          - ','
          - - !Ref 'PublicNetAZ1'
            - !Ref 'PublicNetAZ2'
            - !Ref 'PublicNetAZ3'
            - !Ref 'PublicNetAZ4'
            - !Ref 'PublicNetAZ5'
        - !If
          - 4AZRequired
          - !Join
            - ','
            - - !Ref 'PublicNetAZ1'
              - !Ref 'PublicNetAZ2'
              - !Ref 'PublicNetAZ3'
              - !Ref 'PublicNetAZ4'
          - !If
            - 3AZRequired
            - !Join
              - ','
              - - !Ref 'PublicNetAZ1'
                - !Ref 'PublicNetAZ2'
                - !Ref 'PublicNetAZ3'
            - !Join
              - ','
              - - !Ref 'PublicNetAZ1'
                - !Ref 'PublicNetAZ2'

  PrivateSubnets:
    Value: !If
      - 6AZRequired
      - !Join
        - ','
        - - !Ref 'PrivateNetAZ1'
          - !Ref 'PrivateNetAZ2'
          - !Ref 'PrivateNetAZ3'
          - !Ref 'PrivateNetAZ4'
          - !Ref 'PrivateNetAZ5'
          - !Ref 'PrivateNetAZ6'
      - !If
        - 5AZRequired
        - !Join
          - ','
          - - !Ref 'PrivateNetAZ1'
            - !Ref 'PrivateNetAZ2'
            - !Ref 'PrivateNetAZ3'
            - !Ref 'PrivateNetAZ4'
            - !Ref 'PrivateNetAZ5'
        - !If
          - 4AZRequired
          - !Join
            - ','
            - - !Ref 'PrivateNetAZ1'
              - !Ref 'PrivateNetAZ2'
              - !Ref 'PrivateNetAZ3'
              - !Ref 'PrivateNetAZ4'
          - !If
            - 3AZRequired
            - !Join
              - ','
              - - !Ref 'PrivateNetAZ1'
                - !Ref 'PrivateNetAZ2'
                - !Ref 'PrivateNetAZ3'
            - !Join
              - ','
              - - !Ref 'PrivateNetAZ1'
                - !Ref 'PrivateNetAZ2'

  DataSubnets:
        Value: !If
          - 6AZRequired
          - !Join
            - ','
            - - !Ref 'DataNetAZ1'
              - !Ref 'DataNetAZ2'
              - !Ref 'DataNetAZ3'
              - !Ref 'DataNetAZ4'
              - !Ref 'DataNetAZ5'
              - !Ref 'DataNetAZ6'
          - !If
            - 5AZRequired
            - !Join
              - ','
              - - !Ref 'DataNetAZ1'
                - !Ref 'DataNetAZ2'
                - !Ref 'DataNetAZ3'
                - !Ref 'DataNetAZ4'
                - !Ref 'DataNetAZ5'
            - !If
              - 4AZRequired
              - !Join
                - ','
                - - !Ref 'DataNetAZ1'
                  - !Ref 'DataNetAZ2'
                  - !Ref 'DataNetAZ3'
                  - !Ref 'DataNetAZ4'
              - !If
                - 3AZRequired
                - !Join
                  - ','
                  - - !Ref 'DataNetAZ1'
                    - !Ref 'DataNetAZ2'
                    - !Ref 'DataNetAZ3'
                - !Join
                  - ','
                  - - !Ref 'DataNetAZ1'
                    - !Ref 'DataNetAZ2'

  #Default VPC Security Group
  DefaultSG:
    Value: !GetAtt 'VPC.DefaultSecurityGroup'
